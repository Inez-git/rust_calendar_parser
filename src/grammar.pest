// Grammar rules

// The main rule to match an entire event
event = { "BEGIN:VEVENT\n" ~ fields ~ "END:VEVENT" }

// The individual fields we need to capture
fields = { (dtstart ~ newline | dtend ~ newline | dtstamp ~ newline | uid ~ newline | created ~ newline | last_modified ~ newline | sequence ~ newline | status ~ newline | summary ~ newline | transp ~ newline)* }

// Separate rules for each field
dtstart = { "DTSTART" ~ ":" ~ datetime }
dtend = { "DTEND" ~ ":" ~ datetime }
dtstamp = { "DTSTAMP" ~ ":" ~ datetime }
uid = { "UID" ~ ":" ~ email_address }
created = { "CREATED" ~ ":" ~ datetime }
last_modified = { "LAST-MODIFIED" ~ ":" ~ datetime }
sequence = { "SEQUENCE" ~ ":" ~ digit+ }
status = { "STATUS" ~ ":" ~ status_value }
summary = { "SUMMARY" ~ ":" ~ string_value }
transp = { "TRANSP" ~ ":" ~ transp_value }

// STATUS and TRANSP specific value pattern
status_value = { "CONFIRMED" | "TENTATIVE" | "CANCELLED" }
transp_value = { "TRANSP" | "OPAQUE" }

// Email address pattern
email_address = @{ (letter_or_digit | "." | "_")+ ~ "@" ~ letter_or_digit+ ~ "." ~ letter_or_digit+ }

// Date and time format (like 20241028T091500Z)
datetime = @{ digit{8} ~ "T" ~ digit{6} ~ "Z" }

// Helper for string, to capture values with spaces or special characters
string_value = @{ !newline ~ ( '\u{20}'..'\u{21}' | '\u{23}'..'\u{5B}' | '\u{5D}'..'\u{7A}' )* }

digit = @{ '0'..'9' }
letter_or_digit = @{ 'a'..'z' | 'A'..'Z' | '0'..'9' }

// Newline separator for fields
newline = { "\n" }